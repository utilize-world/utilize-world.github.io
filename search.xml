<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>java中有关static的总结</title>
    <url>/2020/03/30/java%E4%B8%AD%E6%9C%89%E5%85%B3static%E7%9A%84%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="静态-static"><a href="#静态-static" class="headerlink" title="静态(static)"></a>静态(static)</h1><p>自学了java一段时间了，决定对此作一些总结</p>
<h1 id="静态的特点"><a href="#静态的特点" class="headerlink" title="静态的特点"></a>静态的特点</h1><ol>
<li>全局唯一，任何一次的修改都是全局的影响</li>
<li>只加载一次，优先于非静态</li>
<li>使用方式上不依赖实例对象</li>
<li>生命周期属于类级别，即从JVM加载开始到结束</li>
</ol>
<h1 id="静态变量-amp-静态代码块"><a href="#静态变量-amp-静态代码块" class="headerlink" title="静态变量&amp;静态代码块"></a>静态变量&amp;静态代码块</h1><ol>
<li>静态不能在任何方法体中声明，即方法体中不能出现static字样</li>
<li>静态方法中可以调用同类的静态变量，而不能调用非静态变量，如果想要调用，可以先创建一个实例，以此来访问类中的非静态变量</li>
<li>一个类可以使用不包含在任何方法体中的静态代码块，当类被载入时，静态代码块被执行，且只被执行一次，静态块常用来执行类属性 的初始化</li>
<li>程序运行时静态初始化块(static{})最先运行，然后是初始化块，最后是构造方法</li>
</ol>
<h1 id="静态方法-静态方法与非静态方法的区别"><a href="#静态方法-静态方法与非静态方法的区别" class="headerlink" title="静态方法(静态方法与非静态方法的区别)"></a>静态方法(静态方法与非静态方法的区别)</h1><ol>
<li>静态方法是在类中使用static修饰的方法，在类定义的时候已经被装载和分配。而非静态方法是不加static关键字的方法</li>
<li>静态方法在类定义时没有占用内存，只有在类被实例化成对象时，对象调用该方法才被分配内存。</li>
<li>静态方法中只能调用静态成员或者静态方法，不能调用非静态方法或者非静态成员，而非静态方法既可以调用静态成员或者方法又可以调用其他的非静态成员或者方法。</li>
<li>调用同类的静态方法时，可以不用创建类的实例就可以引用静态方法</li>
</ol>
<h1 id="静态内部类和非静态内部类"><a href="#静态内部类和非静态内部类" class="headerlink" title="静态内部类和非静态内部类"></a>静态内部类和非静态内部类</h1><ol>
<li>静态内部类仅能访问外部类的静态成员，非静态内部类都可以访问</li>
<li>若要在与静态内部类并列的类中访问静态内部类中的内容，则可以创建外部类的一个静态内部类的实例，然后引用</li>
<li>若要在与静态内部类并列的类中访问非静态内部类中的内容，则先创建一个外部类的实例，然后再用外部类的实例 新建一个非静态内部类的实例，如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OuterClass outer &#x3D; new OuterClass();</span><br><span class="line">    OuterClass.InnerClass inner &#x3D; outer.new InnerClass();</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>python中有关传值和传址的关系</title>
    <url>/2020/03/30/python%E4%B8%AD%E6%9C%89%E5%85%B3%E4%BC%A0%E5%80%BC%E5%92%8C%E4%BC%A0%E5%9D%80%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="关于这个问题，见如下代码"><a href="#关于这个问题，见如下代码" class="headerlink" title="关于这个问题，见如下代码"></a>关于这个问题，见如下代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def test_fun(number1, number2):</span><br><span class="line">    number1 +&#x3D; 1</span><br><span class="line">    number2 +&#x3D; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def test(number1, number2):</span><br><span class="line">    test_fun(number1, number2)</span><br><span class="line">    print(number1)</span><br><span class="line">    print(number2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    test(1, 2)      # #这种方法里调用方法，传参只是传值（指Number（）， String，tuple等不可改变变量）</span><br><span class="line"># 而list和字典等则是传址</span><br><span class="line">&#39;&#39;&#39;class Number:</span><br><span class="line">    def __init__(self, number):</span><br><span class="line">        self.number &#x3D; number</span><br><span class="line"></span><br><span class="line">number1 &#x3D; Number(1)</span><br><span class="line">number2 &#x3D; Number(2)</span><br><span class="line"></span><br><span class="line">def test_fun(number1, number2):</span><br><span class="line">    number1.number +&#x3D; 1</span><br><span class="line">    number2.number +&#x3D; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def test(number1, number2):</span><br><span class="line">    test_fun(number1, number2)</span><br><span class="line">    print(number1.number)</span><br><span class="line">    print(number2.number)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    test(number1, number2)</span><br><span class="line">    &#39;&#39;&#39;</span><br><span class="line">    #   如上假如换成对象的话就会改变number的值了</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>如何把py文件打包成exe文件</title>
    <url>/2020/03/20/%E5%A6%82%E4%BD%95%E6%8A%8Apy%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85%E6%88%90exe%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="使用pyinstaller将py文件打包成exe文件"><a href="#使用pyinstaller将py文件打包成exe文件" class="headerlink" title="使用pyinstaller将py文件打包成exe文件"></a>使用pyinstaller将py文件打包成exe文件</h1><p>在使用pygame制作简单的游戏时，可以将做好的游戏打包成可执行文件发给朋友</p>
<h2 id="安装pyinstaller"><a href="#安装pyinstaller" class="headerlink" title="安装pyinstaller"></a>安装pyinstaller</h2><p>在终端(terminal)输入<br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><br>即可</p>
<h2 id="利用pyinstaller进行打包"><a href="#利用pyinstaller进行打包" class="headerlink" title="利用pyinstaller进行打包"></a>利用pyinstaller进行打包</h2><p>可以用<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyinstaller -w -F xxx.py</span><br></pre></td></tr></table></figure><br>来进行打包<br>其中xxx即为你要进行打包的文件<br>-w 是使exe文件在窗口运行(GUI)<br>-F 是打包成exe文件必须写的<br>-c 是使exe文件在控制台运行(cmd)(默认)<br>打包后的文件将会出现在当前目录的dist文件夹<br>值得注意的是，若游戏中导入了图片，则需要将其一起放在exe文件对应的文件夹中<br>或者选择更换路径</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>关于pycharm无法导包的问题</title>
    <url>/2020/03/09/%E5%85%B3%E4%BA%8Epycharm%E6%97%A0%E6%B3%95%E5%AF%BC%E5%8C%85/</url>
    <content><![CDATA[<p><em>之前在安装了pycharm之后，本以为可以更加便捷地导入自己想要的库，然而。。。</em></p>
<img src="/2020/03/09/%E5%85%B3%E4%BA%8Epycharm%E6%97%A0%E6%B3%95%E5%AF%BC%E5%8C%85/pic1.jpg" class>*这是用pip在终端安装的结果*
<p>不管安装什么， 出现的只有这句红色的报错。。<br>于是有了如下的解决方案:</p>
<h1 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h1><p>尝试从控制台(cmd)使用pip安装，可以不在目录下，找到包的路径</p>
<img src="/2020/03/09/%E5%85%B3%E4%BA%8Epycharm%E6%97%A0%E6%B3%95%E5%AF%BC%E5%8C%85/pic2.jpg" class>*如图*
<p>直接将其导入项目中的venu文件夹。</p>
<img src="/2020/03/09/%E5%85%B3%E4%BA%8Epycharm%E6%97%A0%E6%B3%95%E5%AF%BC%E5%8C%85/pic3.jpg" class>
<p>这样就可以使其在这个项目内适用了<br>这种方法只能一个一个导入，因此只能暂时解决问题</p>
<h1 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h1><p>当创建一个新项目时(或者在原项目里)<br>点击左上角的File –&gt; settings 调出设置</p>
<img src="/2020/03/09/%E5%85%B3%E4%BA%8Epycharm%E6%97%A0%E6%B3%95%E5%AF%BC%E5%8C%85/pic4.jpg" class>
<p>点击右上角的add content root，将安装第三方包的绝对路径(在方案一中介绍了找路径的方法)直接复制过去，保存<br>就可以一次性解决所有的导入问题了</p>
<p><a href="https://blog.csdn.net/zn505119020/article/details/74280285?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">参考blog</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>posthello,hexo</title>
    <url>/2020/03/07/posthello-hexo/</url>
    <content><![CDATA[<p>这是测试文件，仅用于测试</p>
]]></content>
  </entry>
  <entry>
    <title>Hello Hexo</title>
    <url>/2020/03/07/Hello-Hexo/</url>
    <content><![CDATA[<h1 id="这是创建博客后我写的第一篇博客"><a href="#这是创建博客后我写的第一篇博客" class="headerlink" title="这是创建博客后我写的第一篇博客"></a>这是创建博客后我写的第一篇博客</h1><p>算是给这次经历留一个纪念吧<br>整个博客的搭建，都离不开前辈们的宝贵的经验<br>多亏他们的辛苦付出，才能让我们后辈完成的相对轻松<br>在此我给出一些参考的资料:</p>
<h2 id="关于博客的初步搭建与主题选择"><a href="#关于博客的初步搭建与主题选择" class="headerlink" title="关于博客的初步搭建与主题选择:"></a>关于博客的初步搭建与主题选择:</h2><p>点击<a href="https://www.cnblogs.com/fengxiongZz/p/7707568.html" target="_blank" rel="noopener">这里</a></p>
<h2 id="关于为什么侧边栏链接会出现404"><a href="#关于为什么侧边栏链接会出现404" class="headerlink" title="关于为什么侧边栏链接会出现404:"></a>关于为什么侧边栏链接会出现404:</h2><p>点击<a href="https://blog.csdn.net/fullbug/article/details/103844424?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">这里</a></p>
<h2 id="关于详细的个性化设置-包括live2d-以及一些可能会有用的帮助"><a href="#关于详细的个性化设置-包括live2d-以及一些可能会有用的帮助" class="headerlink" title="关于详细的个性化设置(包括live2d)以及一些可能会有用的帮助"></a>关于详细的个性化设置(包括live2d)以及一些可能会有用的帮助</h2><p>点击<a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">这里</a></p>
<h2 id="关于gitment评论为什么github账号登入出现问题"><a href="#关于gitment评论为什么github账号登入出现问题" class="headerlink" title="关于gitment评论为什么github账号登入出现问题"></a>关于gitment评论为什么github账号登入出现问题</h2><p>点击<a href="https://cloud.tencent.com/developer/news/316368" target="_blank" rel="noopener">这里</a><br><em>注意：gitment评论会经常出现问题，不建议选择</em></p>
<h2 id="关于markdown语句的简单介绍"><a href="#关于markdown语句的简单介绍" class="headerlink" title="关于markdown语句的简单介绍"></a>关于markdown语句的简单介绍</h2><p>点击<a href="https://www.runoob.com/markdown/md-title.html" target="_blank" rel="noopener">这里</a></p>
<h2 id="我认为比较全面的讲解各种功能的一篇博客"><a href="#我认为比较全面的讲解各种功能的一篇博客" class="headerlink" title="我认为比较全面的讲解各种功能的一篇博客"></a>我认为比较全面的讲解各种功能的一篇博客</h2><p>点击<a href="https://blog.csdn.net/u012294515/article/details/83094693" target="_blank" rel="noopener">这里</a></p>
<h2 id="对各种背景个性化的介绍"><a href="#对各种背景个性化的介绍" class="headerlink" title="对各种背景个性化的介绍"></a>对各种背景个性化的介绍</h2><p>点击<a href="https://blog.csdn.net/weixin_39345384/article/details/80785373?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">这里</a><br>还有<a href="https://www.cnblogs.com/tassel/p/10961916.html" target="_blank" rel="noopener">这个</a></p>
<p>现在博客的界面优化还未完全完成，未完待续……</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>hello hexo</tag>
        <tag>搬运</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
